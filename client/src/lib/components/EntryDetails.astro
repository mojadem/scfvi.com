---
import { Tweet, YouTube } from "astro-embed";
import { ARCHIVEBOX_URL, PB_URL } from "@lib/env.ts";
import type { Entry } from "@lib/types.ts";
import { useTranslations, type SupportedLocale } from "@lib/i18n.ts";

interface Props {
  entry: Entry;
}

const { entry } = Astro.props as Props;

const locale = Astro.currentLocale! as SupportedLocale;
const i18n = useTranslations(locale);

const youTubePrefix = "https://www.youtube.com/watch?v=";
const tweetPrefix = "https://x.com/";

const shouldShowTweet =
  ["Art", "Tweet"].includes(entry.expand.type.name) &&
  entry.link.startsWith(tweetPrefix);

const shouldShowYouTube =
  entry.expand["type"].name === "Video" && entry.link.startsWith(youTubePrefix);

function formatMediaLink(file: string) {
  return `${PB_URL}/api/files/entries/${entry.id}/${file}`;
}

function formatArchiveLink() {
  let link = `${ARCHIVEBOX_URL}/archive/${entry.archivebox_id}/index.html`;
  if (entry.expand.type.name === "Video") {
    link += "#media";
  }

  return link;
}
---

<details>
  <summary>{i18n("details")}</summary>
  <p>
    {shouldShowTweet && <Tweet id={entry.link} theme="dark" />}
    {shouldShowYouTube && <YouTube id={entry.link} />}
    {entry.media.map((file) => <img src={formatMediaLink(file)} />)}
  </p>
  <p>
    <Fragment set:html={entry.description} />
  </p>
  <p>
    <a href={entry.link} target="_blank">{i18n("link")}</a>
    {
      entry.archivebox_id != "" && (
        <a href={formatArchiveLink()} target="_blank">
          {i18n("archive")}
          <a />
        </a>
      )
    }
  </p>

  <style>
    details {
      width: 100%;
    }

    img {
      width: 100%;
    }
  </style>
</details>
