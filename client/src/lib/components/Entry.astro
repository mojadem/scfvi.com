---
import type { Entry } from "@lib/types.ts";
import EntryHeader from "./EntryHeader.svelte";
import EntryDetails from "./EntryDetails.astro";

interface Props {
  entry: Entry;
}

const { entry } = Astro.props as Props;
---

<script>
  import { filteredEntries } from "@lib/store.ts";
  import { getPageOfEntry, page } from "@lib/stores/page.ts";
  import { effect } from "nanostores";

  class EntryWrapper extends HTMLElement {
    connectedCallback() {
      const id = this.dataset.id!;
      const el = document.getElementById(id)!;

      effect([page, filteredEntries], (page) => {
        if (getPageOfEntry(id) === page) {
          el.classList.remove("hidden");
        } else {
          el.classList.add("hidden");
        }
      });
    }
  }

  customElements.define("entry-wrapper", EntryWrapper);
</script>

<entry-wrapper id={entry.id} data-id={entry.id}>
  <article class="flex-pad-gap">
    <header>
      <EntryHeader entry={entry} client:load />
    </header>
    <EntryDetails {entry} />
  </article>
</entry-wrapper>

<style>
  article {
    padding: 1rem;
    border-top: 1px solid var(--black);
    gap: 0.5rem;
  }

  .hidden {
    display: none;
  }
</style>
